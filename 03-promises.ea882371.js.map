{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAC/BC,iBAAiB,UAGtB,SAAiBC,GAGf,GAFAA,EAAIC,iBAEAC,EACF,OAGF,MAAMC,EAAUH,EAAII,cACdC,EAAQC,OAAOH,EAAQI,SAASC,MAAMC,OACtCC,EAAOJ,OAAOH,EAAQI,SAASG,KAAKD,OACpCE,EAASL,OAAOH,EAAQI,SAASI,OAAOF,OAC9C,IAAIG,EAAW,GACXC,GAAU,EAEd,GAAIR,EAAQ,GAAKK,EAAO,GAAKC,EAAS,EAGpC,OAFAG,OAAOC,MAAM,mCACQF,GAAX,GAIZ,IAAK,IAAIG,EAAI,EAAGA,GAAKL,EAAQK,GAAK,EAAG,CACnC,MAAMC,EAAUC,EAAcF,EAAGX,GAASW,EAAI,GAAKN,GAChDS,MAAK,EAACC,SAAEA,EAAQZ,MAAEA,MACjBa,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBH,QAAiBZ,OAC5DgB,QAAMC,IAAI,uBAAqBL,QAAiBZ,MAAU,IAE7DkB,OAAM,EAACN,SAAEA,EAAQZ,MAAEA,MAClBa,EAAA1B,GAAS2B,OAAOK,QAAQ,sBAAoBP,QAAiBZ,OAC3DgB,QAAMC,IAAI,sBAAoBL,QAAeZ,MAAU,IAE7DI,EAASgB,KAAKX,E,CAGhBf,GAAW,EAEX2B,QAAQC,IAAIlB,GAAUmB,SAAQ,KAC5B7B,GAAW,EACXC,EAAQ6B,OAAO,G,IAvCnB,IAAI9B,GAAW,EA2Cf,SAASgB,EAAcE,EAAUZ,GAC/B,OAAO,IAAIqB,SAAQ,CAACI,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEb,E,MAAUZ,IAEpB0B,EAAO,C,SAAEd,E,MAAUZ,GAAQ,GAE5BA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onClick);\nlet isActive = false;\n\nfunction onClick(evt) {\n  evt.preventDefault();\n  \n  if (isActive) {\n    return\n  };\n\n  const formEvt = evt.currentTarget;\n  const delay = Number(formEvt.elements.delay.value);\n  const step = Number(formEvt.elements.step.value);\n  const amount = Number(formEvt.elements.amount.value);\n  let promises = [];\n  let isValid = true;\n\n  if (delay < 0 || step < 0 || amount < 0) {\n    window.alert(\"Значення має бути більше 0\");\n    isValid = false;\n    return\n  }\n  \n  for (let i = 1; i <= amount; i += 1) {\n    const promise = createPromise(i, delay + (i - 1) * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    promises.push(promise);\n  }\n\n  isActive = true;\n\n  Promise.all(promises).finally(() => { \n    isActive = false;\n    formEvt.reset();\n});\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }   \n    }, delay)\n  });\n}\n\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","evt","preventDefault","$47d4ff9957288465$var$isActive","formEvt","currentTarget","delay1","Number","elements","delay","value","step","amount","promises","isValid","window","alert","i","promise","$47d4ff9957288465$var$createPromise","then","position","$parcel$interopDefault","Notify","success","console","log","catch","failure","push","Promise","all","finally","reset","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.ea882371.js.map"}